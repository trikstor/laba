{\rtf1\ansi\ansicpg1251\cocoartf1504\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;\csgray\c100000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh18000\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #define _CRT_SECURE_NO_WARNINGS								 // \'8c\'da\'cd\'ce\uc0\u731 \'98\'c2\'cc\'cb\'c2 \'d4\u63743 \'c2\'89\'db\'d4\u63743 \'c2\'ca\'89\'c2\'cc\'cb\'c8 \'89\'ce\u711  fopen\
\
#include <iostream>\
#include <clocale>\
#include "template_func.h"\
\
using namespace std;\
\
/*\
\'c0\'87\'b7\'d3\uc0\u63743 \'87\'da\'d3\u63743 \'cc\'87\u711  \u63743 \'87\'b7\'d3\'da\'87 \u960 7.\
9 \'ac\'87\uc0\u63743 \'cb\'87\'cc\'da.   \'bf\'cc\'da\'d3\'cc \'ab\'d3\'da\'d3\'82   \'91\'8c-160002\
\
1.	\'97\'d3\'c1\'89\'87\'cc\'cb\'c2 \'d2\'d4\'cb\'d2\'cd\'87.\
2.	\'83\'d3\'b7\'87\'82\'ce\'c2\'cc\'cb\'c2 \uc0\u733 \'ce\'c2\'cf\'c2\'cc\'da\'87 \'82 \'d2\'d4\'cb\'d2\'d3\'cd (\'82 \'d2\'d3\'d3\'da\'82\'c2\'da\'d2\'da\'82\'cb\'cb \'d2\'d3 \'d2\'82\'d3\'cb\'cf \'82\'87\u63743 \'cb\'87\'cc\'da\'d3\'cf).\
3.	\'94\'89\'87\'ce\'c2\'cc\'cb\'c2 \uc0\u733 \'ce\'c2\'cf\'c2\'cc\'da\'87 \'cb\'c1 \'d2\'d4\'cb\'d2\'cd\'87 (\'82 \'d2\'d3\'d3\'da\'82\'c2\'da\'d2\'da\'82\'cb\'cb \'d2\'d3 \'d2\'82\'d3\'cb\'cf \'82\'87\u63743 \'cb\'87\'cc\'da\'d3\'cf).\
4.	\'9c\'c2\'98\'87\'da\'b8 \'d2\'d4\'cb\'d2\'cd\'87.\
5.	\'ab\'87\'d4\'cb\'d2\'b8 \'d2\'d4\'cb\'d2\'cd\'87 \'82 \'d9\'87\'c8\'ce.\
6.	\'94\'cc\'cb\'98\'da\'d3\'ca\'c2\'cc\'cb\'c2 \'d2\'d4\'cb\'d2\'cd\'87.\
7.	\'ac\'d3\'d2\'d2\'da\'87\'cc\'d3\'82\'ce\'c2\'cc\'cb\'c2 \'d2\'d4\'cb\'d2\'cd\'87 \'cb\'c1 \'d9\'87\'c8\'ce\'87.\
\
\'ab\'87\'d4\'cb\'d2\'cb \'82 \'ce\'cb\'cc\'c2\'c8\'cc\'d3\'cf \'d2\'d4\'cb\'d2\'cd\'c2 \'d2\'d3\'89\'c2\uc0\u63743 \'ca\'87\'da \'cd\'ce\u731 \'98\'c2\'82\'d3\'c2 \'d2\'ce\'d3\'82\'d3 \'da\'cb\'d4\'87 int. \'97\'d9\'d3\u63743 \'cf\'cb\u63743 \'d3\'82\'87\'da\'b8 \'89\'82\'db\'cc\'87\'d4\u63743 \'87\'82\'ce\'c2\'cc\'cc\u730 \'c8 \'d2\'d4\'cb\'d2\'d3\'cd.\
\'94\'89\'87\'ce\'cb\'da\'b8 \'cb\'c1 \'cc\'c2\'84\'d3 \'a0 \uc0\u733 \'ce\'c2\'cf\'c2\'cc\'da\'d3\'82 \'d4\'c2\u63743 \'c2\'89 \u733 \'ce\'c2\'cf\'c2\'cc\'da\'d3\'cf \'d2 \'c1\'87\'89\'87\'cc\'cc\u730 \'cf \'cc\'d3\'cf\'c2\u63743 \'d3\'cf,\
\'89\'d3\'b7\'87\'82\'cb\'da\'b8 \'a0 \uc0\u733 \'ce\'c2\'cf\'c2\'cc\'da\'d3\'82 \'82 \'cc\'87\'98\'87\'ce\'d3 \'d2\'d4\'cb\'d2\'cd\'87\
*/\
int main() \{\
\
	setlocale(LC_ALL, "Russian");							 // \'96\'db\'d2\'d2\'cd\'cb\'c8 \uc0\u711 \'c1\u730 \'cd \'82 \'cd\'d3\'cc\'d2\'d3\'ce\'cb\
    \
    char *type_param;\
    cout << "\uc0\u1042 \u1099 \u1073 \u1077 \u1088 \u1080 \u1090 \u1077  \u1090 \u1080 \u1087  \u1087 \u1077 \u1088 \u1077 \u1084 \u1077 \u1085 \u1085 \u1086 \u1081 " << endl;\
    cin >> type_param;\
    switch (type_param) \{\
        case "int":\
            int in_val, del_num;\
            break;\
        case "double":\
            double in_val, del_num;\
            break;\
        case "char":\
            char *in_val, *del_num;\
            break;\
            \
        default:\
            cout << "\uc0\u1058 \u1080 \u1087  \u1085 \u1077  \u1080 \u1085 \u1076 \u1077 \u1092 \u1080 \u1094 \u1080 \u1088 \u1091 \u1077 \u1090 \u1089 \u1103 " << endl;\
            break;\
    \}\
\
	point *end, *root;										 // \'8c\'b7\uc0\u729 \u711 \'82\'ce\'c2\'cc\'cb\'c2 \'cd\'d3\u63743 \'cc\'c2\'82\u730 \u305  \'cb \'d4\'d3\'d2\'ce\'c2\'89\'cc\'cb\u305  \u733 \'ce\'c2\'cf\'c2\'cc\'da\'d3\'82 \'d2\'d4\'cb\'d2\'cd\'87\
\
	int elems;										        // \'a0\'d3\'ce\'cb\'98\'c2\'d2\'da\'82\'d3 \uc0\u733 \'ce\'c2\'cf\'c2\'cc\'da\'d3\'82\
	int quantity;									        // \'9b\'ce\'c2\'cf\'c2\'cc\'da \'89\'ce\uc0\u711  \'db\'89\'87\'ce\'c2\'cc\'cb\u711 ; \'cd\'d3\'ce\'cb\'98\'c2\'d2\'da\'82\'d3 \'db\'89\'87\'ce\u711 \'c2\'cf\u730 \u305  \u733 \'ce\'c2\'cf\'c2\'cc\'da\'d3\'82; \'cd\'d3\'ce\'cb\'98\'c2\'d2\'da\'82\'d3 \'db\'89\'87\'ce\u711 \'c2\'cf\u730 \u305  \u733 \'ce\'c2\'cf\'c2\'cc\'da\'d3\'82\
\
\
	cout << "\'ac\'82\'c2\'89\'cb\'da\'c2 \'cd\'d3\'ce-\'82\'d3 \uc0\u733 \'ce\'c2\'cf\'c2\'cc\'da\'d3\'82 \'d2\'d4\'cb\'d2\'cd\'87" << endl;\
	cin >> elems;\
\
	in_val = scan_elem();									// \'9c\'d3\'ce\'db\'98\'c2\'cc\'cb\'c2 \'c1\'cc\'87\'98\'c2\'cc\'cb\uc0\u711  \'cd\'d3\u63743 \'cc\'c2\'82\'d3\'84\'d3 \u733 \'ce\'c2\'cf\'c2\'cc\'da\'87 \'d2\'d4\'cb\'d2\'cd\'87\
	root = make_point(in_val);								// \'97\'d3\'c1\'89\'87\'cc\'cb\'c2 \'cd\'d3\uc0\u63743 \'cc\'c2\'82\'d3\'84\'d3 \u733 \'ce\'c2\'cf\'c2\'cc\'da\'87 \'d2\'d4\'cb\'d2\'cd\'87\
	end = root;                                             // \'9c\'d3\'d2\'ce\'c2\'89\'cc\'cb\'c8 \uc0\u733 \'ce\'c2\'cf\'c2\'cc\'da \'d2\'d4\'cb\'d2\'cd\'87 \'cb\'c1\'cc\'87\'98\'87\'ce\'b8\'cc\'d3 \u63743 \'87\'82\'c2\'cc \'cc\'87\'98\'87\'ce\'b8\'cc\'d3\'cf\'db\
\
\
	end = insert_end_elem(end, elems);						// \'83\'d3\'b7\'87\'82\'ce\'c2\'cc\'cb\'c2 \uc0\u733 \'ce\'c2\'cf\'c2\'cc\'da\'d3\'82 \'82 \'d2\'d4\'cb\'d2\'d3\'cd\
\
	listprint(root, elems);									 // \'9c\'c2\'98\'87\'da\'b8 \'d2\'d4\'cb\'d2\'cd\'87\
\
\
\
	cout << "\'ac\'82\'c2\'89\'cb\'da\'c2 \uc0\u733 \'ce\'c2\'cf\'c2\'cc\'da \'89\'ce\u711  \'db\'89\'87\'ce\'c2\'cc\'cb\u711 " << endl;\
	cin >> del_num;\
\
	cout << "\'ac\'82\'c2\'89\'cb\'da\'c2 \'cd\'d3\'ce-\'82\'d3 \uc0\u733 \'ce\'c2\'cf\'c2\'cc\'da\'d3\'82 \'89\'ce\u711  \'db\'89\'87\'ce\'c2\'cc\'cb\u711  \'cb \'89\'d3\'d4\'d3\'ce\'cc\'c2\'cc\'cb\u711 " << endl;\
	cin >> quantity;\
\
\
\
	root = delete_elem(end, root, del_num, quantity);		// \'94\'89\'87\'ce\'c2\'cc\'cb\'c2 \uc0\u733 \'ce\'c2\'cf\'c2\'cc\'da\'d3\'82 \'d2 \'d2\'d3\'d3\'da\'82\'c2\'da\'d2\'da\'82\'db\u731 \u728 \'cb\'cf\'cb \'d4\'87\u63743 \'87\'cf\'c2\'da\u63743 \'87\'cf\'cb\
\
	listprint(root, elems - quantity);						// \'9c\'c2\'98\'87\'da\'b8 \'d2\'d4\'cb\'d2\'cd\'87\
\
\
\
	root = insert_root_elem(root, quantity)			// \'ac\'d2\'da\'87\'82\'cd\'87 \uc0\u733 \'ce\'c2\'cf\'c2\'cc\'da\'87 \'82 \'cc\'87\'98\'87\'ce\'d3 \'d2\'d4\'cb\'d2\'cd\'87\
\
	listprint(root, elems);									 // \'9c\'c2\'98\'87\'da\'b8 \'d2\'d4\'cb\'d2\'cd\'87\
\
\
\
	in_file(root, "file.txt", elems);						 // \'ab\'87\'d4\'cb\'d2\'b8 \'d2\'d4\'cb\'d2\'cd\'87 \'82 \'d9\'87\'c8\'ce\
\
	root = delete_all(root);								 // \'94\'89\'87\'ce\'c2\'cc\'cb\'c2 \'d2\'d4\'cb\'d2\'cd\'87 \
\
	listprint(root, elems);									 // \'9c\'c2\'98\'87\'da\'b8 \'d4\'db\'d2\'da\'d3\'84\'d3 \'d2\'d4\'cb\'d2\'cd\'87\
\
	end = from_file("file.txt");							 // \'ac\'d3\'d2\'d2\'da\'87\'cc\'d3\'82\'ce\'c2\'cc\'cb\'c2 \'d2\'d4\'cb\'d2\'cd\'87 \'cb\'c1 \'d9\'87\'c8\'ce\'87\
\
	listprint(end, elems);									 // \'9c\'c2\'98\'87\'da\'b8 \'d2\'d4\'cb\'d2\'cd\'87\
\
\
\
	delete end;												 // \'94\'89\'87\'ce\'c2\'cc\'cb\'c2 \'db\'cd\'87\'c1\'87\'da\'c2\'ce\'c2\'c8\
	delete root;\
\
	system("pause");										 // \'ab\'87\'89\'c2\uc0\u63743 \'ca\'cd\'87 \'cd\'d3\'cc\'d2\'d3\'ce\'cb\
\
	return 0;\
\}\
}