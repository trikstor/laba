#include "KMP_func.h"
#include <iostream>
#include <clocale>

using namespace std;
/* Поиск Кнута-Морриса-Пратта (КМП).		Зотов Антон		ФО-160002
Алгоритм используется для поиска подстроки(шаблона) в строке.
Программа последовательно сравнивает символы строки и шаблона, 
если все символы совпали, то засчитывается вхождение и 
сравниваемые элементы перемещаются на длину шаблона. 
Если же символы не совпали, то вычисляется кол-во совпавших символов,
и сравниваемые элементы перемещаются на длину, равную (кол-во совпавших элементов)
-(префикс-функция от кол-во совпавших элементов).
*/
int main()
{
	setlocale(LC_ALL, "Russian");			 // Кириллическая консоль.

	int count;								 // Кол-во вхождений шаблона в строку.

	char *mass = new char[255];				 // Массив исходной строки.
	char *templa = new char[255];			 // Массив шаблона.
	int *prfx = new int[255];				 // Массив значений префикс функции.
	int *result = new int[255];				 // Массив индексов вхождений шаблона в строку.


	cin >> mass;							 // Ввод строки и шаблона.
	cin >> templa;

	int templa_l = strlen(templa);
	int mass_l = strlen(mass);
	prefix(templa, prfx, templa_l);			 // Вычисление префикс-функции.

	// КМП поиск записывает в массив result индексы вхождений шаблона в строку и возвращает кол-во вхождений.
	count = kmp_search(mass, templa, prfx, result, mass_l, templa_l);

	print(result, count);					 // Выводит индексы вхождений в консоль.


	delete[] prfx;							 // Удаление динамических массивов.
	delete[] result;
	delete[] mass;
	delete[] templa;

	system("pause");						 // Задержка консоли.

	return 0;
}
